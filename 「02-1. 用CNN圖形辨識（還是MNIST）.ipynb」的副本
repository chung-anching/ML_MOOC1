{"nbformat":4,"nbformat_minor":0,"metadata":{"anaconda-cloud":{},"kernelspec":{"display_name":"Python [conda env:tf2py38]","language":"python","name":"conda-env-tf2py38-py"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.8"},"colab":{"name":"「02-1. 用CNN圖形辨識（還是MNIST）.ipynb」的副本","provenance":[{"file_id":"https://github.com/yenlung/Deep-Learning-MOOC/blob/master/02-1.%20%E7%94%A8CNN%E5%9C%96%E5%BD%A2%E8%BE%A8%E8%AD%98%EF%BC%88%E9%82%84%E6%98%AFMNIST%EF%BC%89.ipynb","timestamp":1625974897761}]},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"WxyIN08Lp-L8"},"source":["# 主題 02-1. 用 CNN 做圖形辨識\n","\n","Yann LeCun 被譽為 Deep Learning 的三巨頭之一。他的 CNN (Convolutional Neural Networks) 是讓 Neural Network 重新受到重視的主因之一。\n","\n","【註】因 TensorFlow 2 已做了一些改變, 例如完全整合了 Keras。到 2021 年的今天, 有一些細節也做了調整。因此我們依新的規範修改了程式。最大的不同是, 以後大家直接安裝 `tensorflow` 即可, 不用再另外裝 `keras`。"]},{"cell_type":"markdown","metadata":{"id":"YC2xjaH_p-L9"},"source":["## 1. 初始準備\n","\n","基本上和之前是一樣的, 我們就不再說明。"]},{"cell_type":"code","metadata":{"id":"WWdn70Sap-L-","executionInfo":{"status":"ok","timestamp":1626059026879,"user_tz":-480,"elapsed":261,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}}},"source":["%matplotlib inline\n","\n","import numpy as np\n","import matplotlib.pyplot as plt"],"execution_count":2,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"DY1rFoZKp-L_"},"source":["## 2. 讀入 MNIST 數據庫\n","\n","### 2.1 由 tf.Keras 讀入 MNIST\n","\n","基本上和我們上次一樣, 這次因為 tf.Keras 已偷偷把數據庫存在你的電腦, 所以會快很多!"]},{"cell_type":"code","metadata":{"id":"-KPRQEbvp-L_","executionInfo":{"status":"ok","timestamp":1626059027138,"user_tz":-480,"elapsed":4,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}}},"source":["from tensorflow.keras.datasets import mnist"],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"id":"8ntTlSmwp-L_","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626059027784,"user_tz":-480,"elapsed":649,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}},"outputId":"d8e75aee-bf45-4e50-e76b-630cfb45bd02"},"source":["(x_train, y_train), (x_test, y_test) = mnist.load_data()"],"execution_count":4,"outputs":[{"output_type":"stream","text":["Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz\n","11493376/11490434 [==============================] - 0s 0us/step\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"1yGhVEW7p-L_"},"source":["### 2.2 輸入格式整理\n","\n","如果你還記得, 我們每筆輸入資料都是 28x28 的陣列, CNN 其實就是吃「圖」的, 所以基本上不用像之前把每筆資料拉平。「但。是。」平常的圖都有 R, G, B 三個 channels, 每個 channel 都是一個矩陣, 也就是一張圖可能是三個矩陣! 我們是灰階, 也就是只有一個 channel。但這件事也要明確的告訴 Keras。\n","\n","換句話說, 我們的輸入每筆資料型式要從 (28, 28) 換成 (28, 28, 1)! =>只有一個 channel "]},{"cell_type":"code","metadata":{"id":"EU0BxTPgp-MA","executionInfo":{"status":"ok","timestamp":1626059027785,"user_tz":-480,"elapsed":5,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}}},"source":["x_train = x_train.reshape(60000, 28, 28, 1)/255\n","x_test = x_test.reshape(10000, 28, 28, 1)/255"],"execution_count":5,"outputs":[]},{"cell_type":"code","metadata":{"id":"34QKvivBp-MA","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626059027785,"user_tz":-480,"elapsed":4,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}},"outputId":"4bb3654e-1224-4a38-bdfd-c1eedf5108d0"},"source":["x_train[9487].shape"],"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(28, 28, 1)"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"code","metadata":{"id":"8aDQCrbTp-MB","executionInfo":{"status":"ok","timestamp":1626059028363,"user_tz":-480,"elapsed":581,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}}},"source":["X = x_train[9487][:,:,0]  #轉換回原來我們的x"],"execution_count":7,"outputs":[]},{"cell_type":"code","metadata":{"id":"bP1OwU_2p-MC","colab":{"base_uri":"https://localhost:8080/","height":283},"executionInfo":{"status":"ok","timestamp":1626059028364,"user_tz":-480,"elapsed":11,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}},"outputId":"cb02f891-71ec-4fb0-f1c1-1572e0733a1a"},"source":["plt.imshow(X, cmap='Greys')"],"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.image.AxesImage at 0x7f1f55ae00d0>"]},"metadata":{"tags":[]},"execution_count":8},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"lyk9u6dPp-MC"},"source":["### 2.3 輸出格式整理\n","\n","和上次一樣, 我們用標準 1-hot 方式處理。"]},{"cell_type":"code","metadata":{"id":"XZp9dChDp-MC","executionInfo":{"status":"ok","timestamp":1626059028364,"user_tz":-480,"elapsed":8,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}}},"source":["from tensorflow.keras.utils import to_categorical"],"execution_count":9,"outputs":[]},{"cell_type":"code","metadata":{"id":"GPvvFTxsp-MD","executionInfo":{"status":"ok","timestamp":1626059028365,"user_tz":-480,"elapsed":8,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}}},"source":["y_train = to_categorical(y_train, 10)\n","y_test = to_categorical(y_test, 10)"],"execution_count":10,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"SVt9B6Ehp-MD"},"source":["## 3. 打造你的 CNN\n","\n","### 3.1 決定神經網路架構、讀入相關套件\n","\n","CNN 我們一樣要決定用幾層的 CNN, 然後是不是每次都要做 max-pooling。再來就是拉平、送入標準神經網路 (再度要決定幾層、幾個神經元)。\n","\n","* 做 <span style=\"color:red;\">3</span> 次 convolution, 每次都接 max-pooling\n","* filter 大小都是 <span style=\"color:red;\">3x3</span>, max-pooling 都用 <span style=\"color:red;\">2x2</span> 為一小區塊\n","\n","CNN 一個小技巧是每層的 filters 數目是越來越多。做完 convolution 之後, 我們要拉平、再送入一個標準的神經網路。這個神經網路設計是這樣:\n","\n","* 只有 <span style=\"color:red;\">1</span> 個隱藏層, 使用 <span style=\"color:red;\">200</span> 個神經元。"]},{"cell_type":"code","metadata":{"id":"JYICmdebp-MD","executionInfo":{"status":"ok","timestamp":1626059028366,"user_tz":-480,"elapsed":9,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}}},"source":["from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense, Activation, Flatten\n","from tensorflow.keras.layers import Conv2D, MaxPooling2D\n","from tensorflow.keras.optimizers import SGD"],"execution_count":11,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"dqGEXjY8p-MD"},"source":["### 3.2 建構我們的神經網路\n","\n","一開始一樣是打開個空白的神經網路。"]},{"cell_type":"code","metadata":{"id":"J_trgqjAp-MD","executionInfo":{"status":"ok","timestamp":1626059034284,"user_tz":-480,"elapsed":5925,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}}},"source":["model = Sequential()"],"execution_count":12,"outputs":[]},{"cell_type":"code","metadata":{"id":"hRVBTWRip-ME","executionInfo":{"status":"ok","timestamp":1626059034284,"user_tz":-480,"elapsed":16,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}}},"source":["model.add(Conv2D(32, (3,3), padding='same', input_shape=(28,28,1)))\n","model.add(Activation('relu'))"],"execution_count":13,"outputs":[]},{"cell_type":"code","metadata":{"id":"ukmFPMFmp-ME","executionInfo":{"status":"ok","timestamp":1626059034284,"user_tz":-480,"elapsed":15,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}}},"source":["model.add(MaxPooling2D(pool_size=(2,2)))"],"execution_count":14,"outputs":[]},{"cell_type":"code","metadata":{"id":"3fXe8VmVp-ME","executionInfo":{"status":"ok","timestamp":1626059034285,"user_tz":-480,"elapsed":16,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}}},"source":["model.add(Conv2D(64, (3,3), padding='same'))\n","model.add(Activation('relu'))"],"execution_count":15,"outputs":[]},{"cell_type":"code","metadata":{"id":"jUtX8f6Jp-ME","executionInfo":{"status":"ok","timestamp":1626059034285,"user_tz":-480,"elapsed":16,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}}},"source":["model.add(MaxPooling2D(pool_size=(2,2)))"],"execution_count":16,"outputs":[]},{"cell_type":"code","metadata":{"id":"eMfGA70fp-ME","executionInfo":{"status":"ok","timestamp":1626059034285,"user_tz":-480,"elapsed":15,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}}},"source":["model.add(Conv2D(128, (3,3), padding='same'))\n","model.add(Activation('relu'))"],"execution_count":17,"outputs":[]},{"cell_type":"code","metadata":{"id":"NR6d14imp-MF","executionInfo":{"status":"ok","timestamp":1626059034285,"user_tz":-480,"elapsed":15,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}}},"source":["model.add(MaxPooling2D(pool_size=(2,2)))"],"execution_count":18,"outputs":[]},{"cell_type":"code","metadata":{"id":"glquB1Xmp-MF","executionInfo":{"status":"ok","timestamp":1626059034285,"user_tz":-480,"elapsed":15,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}}},"source":["model.add(Flatten())\n","model.add(Dense(200))\n","model.add(Activation('relu'))"],"execution_count":19,"outputs":[]},{"cell_type":"code","metadata":{"id":"r1pgdy2vp-MF","executionInfo":{"status":"ok","timestamp":1626059034286,"user_tz":-480,"elapsed":15,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}}},"source":["model.add(Dense(10))\n","model.add(Activation('softmax'))"],"execution_count":20,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"RSXBIrgIp-MF"},"source":["### 3.3 組裝\n","\n","和之前比較不一樣的是我們還要做 `compile` 才正式把我們的神經網路建好。"]},{"cell_type":"code","metadata":{"id":"zcpaYZZmp-MF","executionInfo":{"status":"ok","timestamp":1626059034286,"user_tz":-480,"elapsed":15,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}}},"source":["model.compile(loss='mse', optimizer=SGD(learning_rate=0.05), metrics=['accuracy'])"],"execution_count":21,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"7QQ96TOUp-MF"},"source":["### 3.4 檢視我們的神經網路"]},{"cell_type":"code","metadata":{"id":"mJpQwnh4-Qe4","executionInfo":{"status":"ok","timestamp":1626059034287,"user_tz":-480,"elapsed":15,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}}},"source":["# (3*3大小的filter+1個bias)*320個filter =320 (Conv2D)   "],"execution_count":22,"outputs":[]},{"cell_type":"code","metadata":{"id":"iOAIE30Wp-MF","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626059034287,"user_tz":-480,"elapsed":15,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}},"outputId":"a8954178-0973-457d-8e0a-2afbc9cc126d"},"source":["model.summary()"],"execution_count":23,"outputs":[{"output_type":"stream","text":["Model: \"sequential\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","conv2d (Conv2D)              (None, 28, 28, 32)        320       \n","_________________________________________________________________\n","activation (Activation)      (None, 28, 28, 32)        0         \n","_________________________________________________________________\n","max_pooling2d (MaxPooling2D) (None, 14, 14, 32)        0         \n","_________________________________________________________________\n","conv2d_1 (Conv2D)            (None, 14, 14, 64)        18496     \n","_________________________________________________________________\n","activation_1 (Activation)    (None, 14, 14, 64)        0         \n","_________________________________________________________________\n","max_pooling2d_1 (MaxPooling2 (None, 7, 7, 64)          0         \n","_________________________________________________________________\n","conv2d_2 (Conv2D)            (None, 7, 7, 128)         73856     \n","_________________________________________________________________\n","activation_2 (Activation)    (None, 7, 7, 128)         0         \n","_________________________________________________________________\n","max_pooling2d_2 (MaxPooling2 (None, 3, 3, 128)         0         \n","_________________________________________________________________\n","flatten (Flatten)            (None, 1152)              0         \n","_________________________________________________________________\n","dense (Dense)                (None, 200)               230600    \n","_________________________________________________________________\n","activation_3 (Activation)    (None, 200)               0         \n","_________________________________________________________________\n","dense_1 (Dense)              (None, 10)                2010      \n","_________________________________________________________________\n","activation_4 (Activation)    (None, 10)                0         \n","=================================================================\n","Total params: 325,282\n","Trainable params: 325,282\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"hnOG9Xo4p-MF"},"source":["## 4. 訓練"]},{"cell_type":"code","metadata":{"id":"cHtKdZYJp-MG","colab":{"base_uri":"https://localhost:8080/"},"outputId":"ac881110-573c-4b2d-f173-c15465d9a9e6"},"source":["model.fit(x_train, y_train, batch_size=100, epochs=12)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Epoch 1/12\n","600/600 [==============================] - 34s 4ms/step - loss: 0.0897 - accuracy: 0.1657\n","Epoch 2/12\n","600/600 [==============================] - 2s 4ms/step - loss: 0.0892 - accuracy: 0.3863\n","Epoch 3/12\n","600/600 [==============================] - 2s 4ms/step - loss: 0.0882 - accuracy: 0.5516\n","Epoch 4/12\n","600/600 [==============================] - 2s 4ms/step - loss: 0.0848 - accuracy: 0.5550\n","Epoch 5/12\n","600/600 [==============================] - 2s 4ms/step - loss: 0.0573 - accuracy: 0.6653\n","Epoch 6/12\n","600/600 [==============================] - 2s 4ms/step - loss: 0.0228 - accuracy: 0.8700\n","Epoch 7/12\n","600/600 [==============================] - 2s 4ms/step - loss: 0.0149 - accuracy: 0.9088\n","Epoch 8/12\n"," 27/600 [>.............................] - ETA: 2s - loss: 0.0136 - accuracy: 0.9107"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"collapsed":true,"id":"aVKf-MIMp-MG"},"source":["## 5. 結果測試"]},{"cell_type":"markdown","metadata":{"id":"86pq18Ekp-MG"},"source":["### 5.1 分數"]},{"cell_type":"code","metadata":{"id":"h9CWjw2Fp-MG"},"source":["score = model.evaluate(x_test, y_test)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"hbtEgkTpp-MG"},"source":["print('測試資料 loss: ', score[0])\n","print('測試資料正確率: ', score[1])"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"collapsed":true,"id":"BRFc-Gtip-MG"},"source":["### 5.2 儲存結果\n","\n","結果看來還不差, 所以我們把結果存起來。"]},{"cell_type":"code","metadata":{"id":"OPP-9Efwp-MG"},"source":["model_json = model.to_json()\n","open('handwriting_model_cnn.json', 'w').write(model_json)\n","model.save_weights('handwriting_weights_cnn.h5')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"collapsed":true,"id":"QBIoFMybp-MH"},"source":["### 5.3 欣賞一下成果\n","\n","我們用另一個方式: 每次選 5 個顯示, 看是不是有正確辨識。"]},{"cell_type":"code","metadata":{"id":"d4VdQ5EYp-MH"},"source":["y_predict = np.argmax(model.predict(x_test), axis=-1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"fWLdNQlcp-MH"},"source":["pick = np.random.randint(1,9999, 5)\n","\n","for i in range(5):\n","    plt.subplot(1,5,i+1)\n","    plt.imshow(x_test[pick[i]].reshape(28,28), cmap='Greys')\n","    plt.title(y_predict[pick[i]])\n","    plt.axis(\"off\")"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"aNHWFK_dp-MH"},"source":["## 5.4 小結論\n","\n","我們到此, 基本上是「亂做」的神經網路。有些同學在不斷試驗的過程中, 可能會發現有時會出現很糟糕的結果。因此, 接下來我們要介紹怎麼樣用些簡單的手法, 能讓學習效果比較穩定, 而且有可能可以增加學習效率。\n","* 更換學習方法optimizer\n","* 改loss function"]},{"cell_type":"code","metadata":{"id":"3UapKu09D70G"},"source":[""],"execution_count":null,"outputs":[]}]}