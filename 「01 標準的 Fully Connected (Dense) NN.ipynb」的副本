{"nbformat":4,"nbformat_minor":0,"metadata":{"anaconda-cloud":{},"kernelspec":{"display_name":"Python [conda env:tf2py38]","language":"python","name":"conda-env-tf2py38-py"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.8"},"colab":{"name":"「01 標準的 Fully Connected (Dense) NN.ipynb」的副本","provenance":[{"file_id":"https://github.com/yenlung/Deep-Learning-MOOC/blob/master/01%20%E6%A8%99%E6%BA%96%E7%9A%84%20Fully%20Connected%20(Dense)%20NN.ipynb","timestamp":1625973770622}]},"accelerator":"GPU","widgets":{"application/vnd.jupyter.widget-state+json":{"80e7a858ff5c4ef9bd1f8ecb9fbf2f64":{"model_module":"@jupyter-widgets/controls","model_name":"VBoxModel","state":{"_view_name":"VBoxView","_dom_classes":["widget-interact"],"_model_name":"VBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_d819187a2ad64490a1f66004ec9dfc97","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_099f48c2bc9944c982210b090bb242ec","IPY_MODEL_4aef1c4e41a54c4ba22a1bcb1d9d72c3","IPY_MODEL_4ffaca16babe445f8c9ca825ba410e3a"]}},"d819187a2ad64490a1f66004ec9dfc97":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"099f48c2bc9944c982210b090bb242ec":{"model_module":"@jupyter-widgets/controls","model_name":"IntSliderModel","state":{"_view_name":"IntSliderView","style":"IPY_MODEL_c4c36c323ca54e63811fe5555821984e","_dom_classes":[],"description":"測試編號","step":1,"_model_name":"IntSliderModel","orientation":"horizontal","max":9999,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":4999,"_view_count":null,"disabled":false,"_view_module_version":"1.5.0","min":0,"continuous_update":true,"readout_format":"d","description_tooltip":null,"readout":true,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_a4899fb4ee3b4c9db63d44ba58d4f2a4"}},"4aef1c4e41a54c4ba22a1bcb1d9d72c3":{"model_module":"@jupyter-widgets/controls","model_name":"ButtonModel","state":{"_view_name":"ButtonView","style":"IPY_MODEL_db2a32dd3fd4461684418f77ea445f0d","_dom_classes":[],"description":"Run Interact","_model_name":"ButtonModel","button_style":"","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","tooltip":"","_view_count":null,"disabled":false,"_view_module_version":"1.5.0","layout":"IPY_MODEL_adfcdfcf27e1474bbf1a6b69901b50ef","_model_module":"@jupyter-widgets/controls","icon":""}},"4ffaca16babe445f8c9ca825ba410e3a":{"model_module":"@jupyter-widgets/output","model_name":"OutputModel","state":{"_view_name":"OutputView","msg_id":"","_dom_classes":[],"_model_name":"OutputModel","outputs":[],"_view_module":"@jupyter-widgets/output","_model_module_version":"1.0.0","_view_count":null,"_view_module_version":"1.0.0","layout":"IPY_MODEL_6418dd95f54d4462b5a21d79edaa8b4a","_model_module":"@jupyter-widgets/output"}},"c4c36c323ca54e63811fe5555821984e":{"model_module":"@jupyter-widgets/controls","model_name":"SliderStyleModel","state":{"_view_name":"StyleView","handle_color":null,"_model_name":"SliderStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"a4899fb4ee3b4c9db63d44ba58d4f2a4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"db2a32dd3fd4461684418f77ea445f0d":{"model_module":"@jupyter-widgets/controls","model_name":"ButtonStyleModel","state":{"_view_name":"StyleView","_model_name":"ButtonStyleModel","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"button_color":null,"font_weight":"","_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"adfcdfcf27e1474bbf1a6b69901b50ef":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"6418dd95f54d4462b5a21d79edaa8b4a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}}}}},"cells":[{"cell_type":"markdown","metadata":{"id":"IF9YteQulnb_"},"source":["### 主題 01-1. 標準的 Fully Connected (Dense) NN\n","\n","【註】因 TensorFlow 2 已做了一些改變, 例如完全整合了 Keras。到 2021 年的今天, 有一些細節也做了調整。因此我們依新的規範修改了程式。最大的不同是, 以後大家直接安裝 tensorflow 即可, 不用再另外裝 keras。除此之外的小細節包括:\n","\n","1. `predict_class` 已改直接 `predict` 取 `argmax`。\n","2. Learning rate 參數要叫 `learning_rate`, 不再用 `lr`。"]},{"cell_type":"markdown","metadata":{"id":"j9bYcehQlncA"},"source":["## 1. 初始準備"]},{"cell_type":"markdown","metadata":{"id":"7N_iKnwwlncB"},"source":["我們標準數據分析動作!"]},{"cell_type":"code","metadata":{"id":"4F3rGfV5lncB","executionInfo":{"status":"ok","timestamp":1626058457538,"user_tz":-480,"elapsed":4,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}}},"source":["%matplotlib inline\n","\n","import numpy as np\n","import matplotlib.pyplot as plt"],"execution_count":1,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"O-yiP0vslncC"},"source":["## 2. 讀入 MNIST 數據庫\n","\n","MNIST 是有一堆 0-9 的手寫數字圖庫。有 6 萬筆訓練資料, 1 萬筆測試資料。它是 \"Modified\" 版的 NIST 數據庫, 原來的版本有更多資料。這個 Modified 的版本是由 LeCun, Cortes, 及 Burges 等人做的。可以參考這個數據庫的[原始網頁](http://yann.lecun.com/exdb/mnist/)。\n","\n","MNIST 可以說是 Deep Learning 最有名的範例, 它被 Deep Learning 大師 Hinton 稱為「機器學習的果蠅」。"]},{"cell_type":"markdown","metadata":{"id":"YKpFYBwllncC"},"source":["### 2.1 由 tf.Keras 讀入 MNIST"]},{"cell_type":"markdown","metadata":{"id":"4Q8uj7M6lncC"},"source":["tf.Keras 很貼心的幫我們準備好 MNIST 數據庫, 我們可以這樣讀進來 (第一次要花點時間)。"]},{"cell_type":"code","metadata":{"id":"5x-xGhq5lncD","executionInfo":{"status":"ok","timestamp":1626058459227,"user_tz":-480,"elapsed":1692,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}}},"source":["from tensorflow.keras.datasets import mnist"],"execution_count":2,"outputs":[]},{"cell_type":"code","metadata":{"id":"Q9IPWFwQlncE","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626058459686,"user_tz":-480,"elapsed":462,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}},"outputId":"67e87792-9d60-475a-b2b6-2bd375b72e27"},"source":["(x_train, y_train), (x_test, y_test) = mnist.load_data()"],"execution_count":3,"outputs":[{"output_type":"stream","text":["Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz\n","11493376/11490434 [==============================] - 0s 0us/step\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"Ietev6VvlncE"},"source":["我們來看看訓練資料是不是 6 萬筆、測試資料是不是有 1 筆。"]},{"cell_type":"code","metadata":{"id":"SYI6edyzlncF","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626058459687,"user_tz":-480,"elapsed":16,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}},"outputId":"d7510370-1e44-4b96-bcae-495da5b70f7e"},"source":["len(x_train)"],"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["60000"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"code","metadata":{"id":"avOf_b3BlncF","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626058459687,"user_tz":-480,"elapsed":14,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}},"outputId":"6cef4d66-680d-444c-9aa7-a6058dca0748"},"source":["len(x_test)"],"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["10000"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"markdown","metadata":{"id":"nqkdk1nWlncG"},"source":["特別要注意的是, 萬一在讀的過程中失敗, 你需要找到下載的部份數據集刪去, 然後在一個網路通𣈱的地方再下載一次。"]},{"cell_type":"markdown","metadata":{"id":"09jdN6BulncG"},"source":["### 2.2 數據庫的內容\n","\n","每筆輸入 (x) 就是一個手寫的 0-9 中一個數字的圖檔, 大小為 28x28。而輸出 (y) 當然就是「正確答案」。我們來看看編號 87 的訓練資料。"]},{"cell_type":"code","metadata":{"id":"4Th-PdYYlncG","executionInfo":{"status":"ok","timestamp":1626058459687,"user_tz":-480,"elapsed":13,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}}},"source":["X = x_train[87]"],"execution_count":6,"outputs":[]},{"cell_type":"code","metadata":{"id":"UduOEHlJlncH","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626058459688,"user_tz":-480,"elapsed":13,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}},"outputId":"c5161b4e-1747-4a0e-f398-e2bf32e301e1"},"source":["X"],"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  39,\n","        125, 225, 254, 254, 255, 254, 170,  48,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  43, 101, 250,\n","        253, 253, 253, 253, 253, 253, 253, 250, 161,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,  94, 246, 247, 253,\n","        253, 196, 227, 116,  56, 253, 253, 253, 234,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0, 152, 253, 253, 180,\n","         19,   9,  15,   0,   4,  55, 253, 253, 166,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,  41, 238, 253, 253, 125,\n","          0,   0,   0,  21, 189, 232, 253, 253, 117,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0, 219, 253, 220, 165,  34,\n","         92,  21,  52, 228, 253, 253, 241,  82,  13,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,  38, 241, 170,  25,  20,  12,\n","         75,  39,  59, 253, 253, 253, 110,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0, 112, 253, 236,  67,   0,   0,\n","          0,   0, 100, 253, 253, 221,  16,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,  23, 239, 253, 235, 202, 135,\n","         99, 173, 240, 253, 253, 110,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,  54, 200, 253, 253, 253,\n","        253, 253, 253, 253, 241,  63,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,  25, 112, 244, 253,\n","        237, 142, 253, 253, 111,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  61,  71,\n","         51, 159, 253, 188,  22,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  15,\n","        150, 236, 212,  22,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  99,\n","        253, 243,  98,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  72, 237,\n","        253, 105,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  10, 219, 253,\n","        195,  22,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   8, 171, 253, 207,\n","         21,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0, 105, 253, 198,  76,\n","          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,  60, 242, 253,  38,   0,\n","          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0, 235, 253, 206,  19,   0,\n","          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0]], dtype=uint8)"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"code","metadata":{"id":"SihUrovPlncH","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626058459688,"user_tz":-480,"elapsed":11,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}},"outputId":"2b538df4-68e5-457c-cc42-10e9af1b310d"},"source":["X.shape"],"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(28, 28)"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"markdown","metadata":{"id":"5p9qOOb9lncH"},"source":["因為是圖檔, 當然可以顯示出來!"]},{"cell_type":"code","metadata":{"id":"ishYTrxslncH","colab":{"base_uri":"https://localhost:8080/","height":283},"executionInfo":{"status":"ok","timestamp":1626058460120,"user_tz":-480,"elapsed":441,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}},"outputId":"208de471-37f4-4329-e514-be4cac8e63ff"},"source":["plt.imshow(X, cmap = 'Greys')"],"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.image.AxesImage at 0x7ff090f24bd0>"]},"metadata":{"tags":[]},"execution_count":9},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"k_JcNZsnlncH","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626058460120,"user_tz":-480,"elapsed":11,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}},"outputId":"bf91e69c-10e8-49c1-b702-d5d618f09085"},"source":["y_train[87]"],"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["9"]},"metadata":{"tags":[]},"execution_count":10}]},{"cell_type":"markdown","metadata":{"id":"sxtoqUsRlncH"},"source":["### 2.3 輸入格式整理\n","\n","我們現在要用標準神經網路學學手寫辨識。原來的每筆數據是個 28x28 的矩陣 (array), 但標準神經網路只吃「平平的」, 也就是每次要 28x28=784 長的向量。因此我們要用 `reshape` 調校一下。"]},{"cell_type":"code","metadata":{"id":"GB0itfSslncI","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626058460121,"user_tz":-480,"elapsed":10,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}},"outputId":"07ca24c1-011d-43b7-f709-8d7c683977f3"},"source":["x_train.shape"],"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(60000, 28, 28)"]},"metadata":{"tags":[]},"execution_count":11}]},{"cell_type":"code","metadata":{"id":"IILf2pIslncI","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626058460121,"user_tz":-480,"elapsed":8,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}},"outputId":"205e39fb-ffc1-4989-8b78-a66446f9d7b0"},"source":["x_test.shape"],"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(10000, 28, 28)"]},"metadata":{"tags":[]},"execution_count":12}]},{"cell_type":"code","metadata":{"id":"MeYeYgjwlncI","executionInfo":{"status":"ok","timestamp":1626058460122,"user_tz":-480,"elapsed":9,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}}},"source":["x_train = x_train.reshape(60000, 784)\n","x_test = x_test.reshape(10000, 784)"],"execution_count":13,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"DK1BfCHflncI"},"source":["### 2.4 輸出格式整理\n","\n","我們可能會想, 我們想學的函數是這樣的型式:\n","\n","$$\\hat{f} \\colon \\mathbb{R}^{784} \\to \\mathbb{R}$$\n","\n","其實這樣不太好! 為什麼呢? 比如說我們的輸入 x 是一張 0 的圖, 因為我們訓練的神經網路總會有點誤差, 所以可能會得到:\n","\n","$$\\hat{f}(x) = 0.5$$\n","\n","那這意思是有可能是 0, 也有可能是 1 嗎!!?? 可是 0 和 1 根本不像啊。換句話說分類的問題這樣做其實不合理!\n","\n","於是我們會做 \"1-hot enconding\", 也就是\n","\n","* 1 -> [0, 1, 0, 0, 0, 0, 0, 0, 0]\n","* 5 -> [0, 0, 0, 0, 0, 1, 0, 0, 0]\n","\n","等等。因為分類問題基本上都要做這件事, Keras 其實已幫我們準備好套件!"]},{"cell_type":"code","metadata":{"id":"sIBP9e5slncI","executionInfo":{"status":"ok","timestamp":1626058460122,"user_tz":-480,"elapsed":8,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}}},"source":["from tensorflow.keras.utils import to_categorical"],"execution_count":14,"outputs":[]},{"cell_type":"code","metadata":{"id":"H104DciWlncI","executionInfo":{"status":"ok","timestamp":1626058460122,"user_tz":-480,"elapsed":8,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}}},"source":["y_train = to_categorical(y_train, 10)\n","y_test = to_categorical(y_test, 10)"],"execution_count":15,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"jXeT08YMlncI"},"source":["我們來看看剛剛是 9 的 87 號數據的答案。"]},{"cell_type":"code","metadata":{"id":"eSn-eACClncJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626058460122,"user_tz":-480,"elapsed":8,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}},"outputId":"7822569c-e233-4794-8e4b-3182ac40acde"},"source":["y_train[87]"],"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0., 0., 0., 0., 0., 0., 0., 0., 0., 1.], dtype=float32)"]},"metadata":{"tags":[]},"execution_count":16}]},{"cell_type":"markdown","metadata":{"id":"u6af_Tx7lncJ"},"source":["和我們想的一樣! 至此我們可以打造我們的神經網路了。"]},{"cell_type":"markdown","metadata":{"id":"CynfLi73lncJ"},"source":["## 3. 打造第一個神經網路\n","\n","我們決定了我們的函數是\n","\n","$$\\hat{f} \\colon \\mathbb{R}^{784} \\to \\mathbb{R}^{10}$$\n","\n","這個樣子。而我們又說第一次要用標準神網路試試, 所以我們只需要再決定要幾個隱藏層、每層要幾個神經元, 用哪個激發函數就可以了。\n","\n","### 3.1 決定神經網路架構、讀入相關套件\n","\n","假如我們要這麼做:\n","\n","* 使用 <span style=\"color:red;\">2</span> 個 hidden layers\n","* Hidden layer 1 用 <span style=\"color:red;\">4</span> 個神經元\n","* Hidden layer 2 用 <span style=\"color:red;\">2</span> 個神經元\n","* Activation Function 唯一指名 <span style=\"color:red;\">sigmoid</span>\n","\n","於是從 tf.Keras 把相關套件讀進來。"]},{"cell_type":"code","metadata":{"id":"uh2BCUx4lncJ","executionInfo":{"status":"ok","timestamp":1626058460123,"user_tz":-480,"elapsed":8,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}}},"source":["from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense, Activation\n","from tensorflow.keras.optimizers import SGD"],"execution_count":17,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ymEVIIj9lncJ"},"source":["### 3.2 建構我們的神經網路\n","\n","和以前做迴歸或機器學習一樣, 我們就打開個「函數學習機」。標準一層一層傳遞的神經網路叫 `Sequential`, 於是我們打開一個空的神經網路。"]},{"cell_type":"code","metadata":{"id":"l5JMq58IlncJ","executionInfo":{"status":"ok","timestamp":1626058466003,"user_tz":-480,"elapsed":5888,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}}},"source":["model = Sequential()"],"execution_count":18,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"7KSZV6aelncJ"},"source":["我們每次用 `add` 去加一層, 從第一個隱藏層開始。而第一個隱藏層因為 Keras 當然猜不到輸入有幾個 features, 所以我們要告訴它。"]},{"cell_type":"code","metadata":{"id":"7Sngr1kLlncJ","executionInfo":{"status":"ok","timestamp":1626058466004,"user_tz":-480,"elapsed":12,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}}},"source":["model.add(Dense(4, input_dim=784))\n","model.add(Activation('sigmoid'))"],"execution_count":19,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"9TLY-zb3lncK"},"source":["第二層 hidden layer 因為前面輸出是 4, 現在輸入是 2, 就不用再說了! 這裡的 2 只告訴 Keras, 我們第二層是用 2 個神經元!"]},{"cell_type":"code","metadata":{"id":"aV-XrqoNlncK","executionInfo":{"status":"ok","timestamp":1626058466004,"user_tz":-480,"elapsed":10,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}}},"source":["model.add(Dense(2))\n","model.add(Activation('sigmoid'))"],"execution_count":20,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"MDMhAzX4lncK"},"source":["輸出有 10 個數字, 所以輸出層的神經元是 10 個! 而如果我們的網路輸出是 \n","\n","$$(y_1, y_2, \\ldots, y_{10})$$\n","\n","我們還希望\n","\n","$$\\sum_{i=1}^{10} y_i = 1$$\n","\n","這可能嗎, 結果是很容易, 就用 `softmax` 當激發函數就可以!!"]},{"cell_type":"code","metadata":{"id":"9kObYav3lncK","executionInfo":{"status":"ok","timestamp":1626058466004,"user_tz":-480,"elapsed":10,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}}},"source":["model.add(Dense(10))\n","model.add(Activation('softmax'))"],"execution_count":21,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"oStw4tv6lncK"},"source":["至此我們的第一個神經網路就建好了!"]},{"cell_type":"markdown","metadata":{"id":"O1Fmb6PflncK"},"source":["### 3.3 組裝\n","\n","和之前比較不一樣的是我們還要做 `compile` 才正式把我們的神經網路建好。你可以發現我們還需要做幾件事:\n","\n","* 決定使用的 loss function, 一般是 `mse`\n","* 決定 optimizer, 我們用標準的 SGD\n","* 設 learning rate\n","\n","為了一邊訓練一邊看到結果, 我們加設\n","\n","    metrics=['accuracy']\n","    \n","本行基本上和我們的神經網路功能沒有什麼關係。"]},{"cell_type":"code","metadata":{"id":"pFU7gINwlncK","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626058466004,"user_tz":-480,"elapsed":10,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}},"outputId":"773bf3f6-320a-4006-9100-36c7776365e7"},"source":["model.compile(loss='mse', optimizer=SGD(lr=0.087), metrics=['accuracy'])"],"execution_count":22,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/optimizer_v2/optimizer_v2.py:375: UserWarning: The `lr` argument is deprecated, use `learning_rate` instead.\n","  \"The `lr` argument is deprecated, use `learning_rate` instead.\")\n"],"name":"stderr"}]},{"cell_type":"markdown","metadata":{"id":"2O3xwChulncK"},"source":["## 4. 檢視我們的神經網路"]},{"cell_type":"markdown","metadata":{"id":"JC0fQ2QNlncK"},"source":["我們可以檢視我們神經網路的架構, 可以確認一下是不是和我們想像的一樣。"]},{"cell_type":"markdown","metadata":{"id":"LJr3dsrPlncK"},"source":["### 4.1 看 model 的 summary"]},{"cell_type":"code","metadata":{"id":"Da3O_9mPlncL","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626058466005,"user_tz":-480,"elapsed":10,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}},"outputId":"817ddf4f-caa1-4d17-d07e-ba4c641ec981"},"source":["model.summary()"],"execution_count":23,"outputs":[{"output_type":"stream","text":["Model: \"sequential\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","dense (Dense)                (None, 4)                 3140      \n","_________________________________________________________________\n","activation (Activation)      (None, 4)                 0         \n","_________________________________________________________________\n","dense_1 (Dense)              (None, 2)                 10        \n","_________________________________________________________________\n","activation_1 (Activation)    (None, 2)                 0         \n","_________________________________________________________________\n","dense_2 (Dense)              (None, 10)                30        \n","_________________________________________________________________\n","activation_2 (Activation)    (None, 10)                0         \n","=================================================================\n","Total params: 3,180\n","Trainable params: 3,180\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"F_vickqAlncL"},"source":["很快算算參數數目和我們想像是否是一樣的!"]},{"cell_type":"code","metadata":{"id":"hf1DwmMKlncL","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626058466005,"user_tz":-480,"elapsed":9,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}},"outputId":"de77b0be-1021-4238-c6d4-633f71899515"},"source":["784*4 + 4"],"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3140"]},"metadata":{"tags":[]},"execution_count":24}]},{"cell_type":"code","metadata":{"id":"NhomgrN9lncL","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626058466005,"user_tz":-480,"elapsed":8,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}},"outputId":"1324ae87-e361-4df5-d20f-9fa78c0262a2"},"source":["4*2 + 2"],"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["10"]},"metadata":{"tags":[]},"execution_count":25}]},{"cell_type":"code","metadata":{"id":"Sdlgqs5UlncL","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626058466006,"user_tz":-480,"elapsed":8,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}},"outputId":"7e0105df-9208-43ee-8ae4-144632a69b5d"},"source":["2*10 + 10"],"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["30"]},"metadata":{"tags":[]},"execution_count":26}]},{"cell_type":"markdown","metadata":{"id":"r9-z91iMlncL"},"source":["## 5. 訓練你的第一個神經網路\n","\n","恭喜! 我們完成了第一個神經網路。現在要訓練的時候, 你會發現不是像以前沒頭沒腦把訓練資料送進去就好。這裡我們還有兩件事要決定:\n","\n","* 一次要訓練幾筆資料 (`batch_size`), 我們就 100 筆調一次參數好了\n","* 這 6 萬筆資料一共要訓練幾次 (`epochs`), 我們訓練個 20 次試試\n","\n","於是最精彩的就來了。你要有等待的心理準備..."]},{"cell_type":"code","metadata":{"id":"lIzwYtp1lncL","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626058507619,"user_tz":-480,"elapsed":41620,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}},"outputId":"dac30f56-0288-4fbe-b564-8be70766961d"},"source":["model.fit(x_train, y_train, batch_size=100, epochs=20)"],"execution_count":27,"outputs":[{"output_type":"stream","text":["Epoch 1/20\n","600/600 [==============================] - 4s 2ms/step - loss: 0.0906 - accuracy: 0.0762\n","Epoch 2/20\n","600/600 [==============================] - 1s 2ms/step - loss: 0.0900 - accuracy: 0.1440\n","Epoch 3/20\n","600/600 [==============================] - 1s 2ms/step - loss: 0.0896 - accuracy: 0.2041\n","Epoch 4/20\n","600/600 [==============================] - 1s 2ms/step - loss: 0.0893 - accuracy: 0.2097\n","Epoch 5/20\n","600/600 [==============================] - 1s 2ms/step - loss: 0.0889 - accuracy: 0.1945\n","Epoch 6/20\n","600/600 [==============================] - 1s 2ms/step - loss: 0.0885 - accuracy: 0.1968\n","Epoch 7/20\n","600/600 [==============================] - 1s 2ms/step - loss: 0.0883 - accuracy: 0.1977\n","Epoch 8/20\n","600/600 [==============================] - 1s 2ms/step - loss: 0.0881 - accuracy: 0.1985\n","Epoch 9/20\n","600/600 [==============================] - 1s 2ms/step - loss: 0.0879 - accuracy: 0.1989\n","Epoch 10/20\n","600/600 [==============================] - 1s 2ms/step - loss: 0.0877 - accuracy: 0.1991\n","Epoch 11/20\n","600/600 [==============================] - 1s 2ms/step - loss: 0.0875 - accuracy: 0.1993\n","Epoch 12/20\n","600/600 [==============================] - 1s 2ms/step - loss: 0.0874 - accuracy: 0.1996\n","Epoch 13/20\n","600/600 [==============================] - 1s 2ms/step - loss: 0.0872 - accuracy: 0.1996\n","Epoch 14/20\n","600/600 [==============================] - 1s 2ms/step - loss: 0.0870 - accuracy: 0.1998\n","Epoch 15/20\n","600/600 [==============================] - 1s 2ms/step - loss: 0.0868 - accuracy: 0.1998\n","Epoch 16/20\n","600/600 [==============================] - 1s 2ms/step - loss: 0.0866 - accuracy: 0.1996\n","Epoch 17/20\n","600/600 [==============================] - 1s 2ms/step - loss: 0.0864 - accuracy: 0.1997\n","Epoch 18/20\n","600/600 [==============================] - 1s 2ms/step - loss: 0.0863 - accuracy: 0.1998\n","Epoch 19/20\n","600/600 [==============================] - 1s 2ms/step - loss: 0.0861 - accuracy: 0.2000\n","Epoch 20/20\n","600/600 [==============================] - 1s 2ms/step - loss: 0.0859 - accuracy: 0.1999\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["<tensorflow.python.keras.callbacks.History at 0x7ff0440abc10>"]},"metadata":{"tags":[]},"execution_count":27}]},{"cell_type":"markdown","metadata":{"id":"tsGPTOh4lncL"},"source":["## 6. 試用我們的結果\n","\n","我們來用比較炫的方式來看看可愛的神經網路學習成果。對指令有問題可以參考我們之前的 MOOC 影片教學。"]},{"cell_type":"code","metadata":{"id":"4LVYuMeClncL","executionInfo":{"status":"ok","timestamp":1626058507620,"user_tz":-480,"elapsed":5,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}}},"source":["from ipywidgets import interact_manual"],"execution_count":28,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"GpxPYW1_lncM"},"source":["我們 \"predict\" 放的是我們神經網路的學習結果。這裡用 `predict_classes` 會讓我們 Keras 選 10 個輸出機率最大的那類。"]},{"cell_type":"code","metadata":{"id":"tkW8H9jNlncM","executionInfo":{"status":"ok","timestamp":1626058508072,"user_tz":-480,"elapsed":456,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}}},"source":["y_predict = np.argmax(model.predict(x_test), axis=-1)"],"execution_count":29,"outputs":[]},{"cell_type":"code","metadata":{"id":"h64DIR9ElncM","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626058508073,"user_tz":-480,"elapsed":13,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}},"outputId":"434a1ed7-e81c-4533-b8ea-390e12c93513"},"source":["y_predict"],"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([7, 6, 7, ..., 7, 7, 6])"]},"metadata":{"tags":[]},"execution_count":30}]},{"cell_type":"markdown","metadata":{"id":"E2xNRCyOlncM"},"source":["不要忘了我們的 `x_test` 每筆資料已經換成 784 維的向量, 我們要整型回 28x28 的矩陣才能當成圖形顯示出來!"]},{"cell_type":"code","metadata":{"id":"LZJuCTFQlncM","executionInfo":{"status":"ok","timestamp":1626058508073,"user_tz":-480,"elapsed":10,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}}},"source":["def test(測試編號):\n","    plt.imshow(x_test[測試編號].reshape(28,28), cmap='Greys')\n","    print('神經網路判斷為:', y_predict[測試編號])"],"execution_count":31,"outputs":[]},{"cell_type":"code","metadata":{"id":"ipIoBMOulncM","colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"status":"ok","timestamp":1626058508074,"user_tz":-480,"elapsed":11,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}},"outputId":"d619c1b5-6077-4bee-e871-3759bc603510"},"source":["test(87)"],"execution_count":32,"outputs":[{"output_type":"stream","text":["神經網路判斷為: 7\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"zjZl1px-lncM","colab":{"base_uri":"https://localhost:8080/","height":99,"referenced_widgets":["80e7a858ff5c4ef9bd1f8ecb9fbf2f64","d819187a2ad64490a1f66004ec9dfc97","099f48c2bc9944c982210b090bb242ec","4aef1c4e41a54c4ba22a1bcb1d9d72c3","4ffaca16babe445f8c9ca825ba410e3a","c4c36c323ca54e63811fe5555821984e","a4899fb4ee3b4c9db63d44ba58d4f2a4","db2a32dd3fd4461684418f77ea445f0d","adfcdfcf27e1474bbf1a6b69901b50ef","6418dd95f54d4462b5a21d79edaa8b4a"]},"executionInfo":{"status":"ok","timestamp":1626058508074,"user_tz":-480,"elapsed":8,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}},"outputId":"15b1d9fe-acbb-42a8-e54e-68bec5dbeba2"},"source":["interact_manual(test, 測試編號=(0, 9999))"],"execution_count":33,"outputs":[{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"80e7a858ff5c4ef9bd1f8ecb9fbf2f64","version_minor":0,"version_major":2},"text/plain":["interactive(children=(IntSlider(value=4999, description='測試編號', max=9999), Button(description='Run Interact', …"]},"metadata":{"tags":[]}},{"output_type":"execute_result","data":{"text/plain":["<function __main__.test>"]},"metadata":{"tags":[]},"execution_count":33}]},{"cell_type":"markdown","metadata":{"id":"ajmiRSKOlncN"},"source":["到底測試資料總的狀況如何呢? 我們可以給我們神經網路「考一下試」。"]},{"cell_type":"code","metadata":{"id":"c2V9mZO3lncN","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626058508835,"user_tz":-480,"elapsed":767,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}},"outputId":"5a3754ec-dc73-4373-ce47-bfa25a9fcf4f"},"source":["score = model.evaluate(x_test, y_test)"],"execution_count":34,"outputs":[{"output_type":"stream","text":["313/313 [==============================] - 1s 2ms/step - loss: 0.0858 - accuracy: 0.1956\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"D5uVKTlBlncN","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626058508836,"user_tz":-480,"elapsed":6,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}},"outputId":"693ff365-bf20-4006-8f59-bdd5e6339ef2"},"source":["print('loss:', score[0])\n","print('正確率', score[1])"],"execution_count":35,"outputs":[{"output_type":"stream","text":["loss: 0.08582203835248947\n","正確率 0.1956000030040741\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"ABqf1XTIlncN"},"source":["### [作業] \n","\n","這個神經網路實在有夠遜的! 我們試試看能不能改善它, 讓正確率提升到 90% 以上! "]},{"cell_type":"markdown","metadata":{"id":"IVk8-Ik3lncN"},"source":["## 7. 訓練好的神經網路存起來!\n","\n","如果對訓練成果滿意, 我們當然不想每次都再訓練一次! 我們可以把神經網路的架構和訓練好的參數都存起來, 以供日後使用!"]},{"cell_type":"markdown","metadata":{"id":"oUVepIHElncO"},"source":["之前還沒裝 pyh5 要在終端機 (Anaconda Prompt) 下安裝:\n","    \n","    conda install h5py"]},{"cell_type":"code","metadata":{"id":"1o8gkRvClncO","executionInfo":{"status":"ok","timestamp":1626058508836,"user_tz":-480,"elapsed":3,"user":{"displayName":"鍾安慶","photoUrl":"","userId":"15393422789155174717"}}},"source":["model_json = model.to_json()\n","open('stupid_model.json', 'w').write(model_json)\n","model.save_weights('stupid_model_weights.h5')"],"execution_count":36,"outputs":[]}]}